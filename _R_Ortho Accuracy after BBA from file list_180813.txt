###############################
# Plot Map Accuracy for multi projects
# After BBA - using while to loop through filelist
###############################

##########################################################################################
#
# Upgrades:
#
##########################################################################################

library(ellipse)
library(car)

legSigFig <- 3 # signifigant figures to use in Legend
rptConf <-(0.90)

##################
# Files and Data
#
# Note: I changed the headers in the .csv files to read "raw_lat_delta", "adj_lat_delta", etc...
##################

fileName <- c("na_12_ortho_eval.csv", "na_13_ortho_eval.csv",
              "na_14_ortho_eval.csv", "na_23_ortho_eval.csv",
              "na_24_ortho_eval.csv", "na_25_ortho_eval.csv",
              "na_26_ortho_eval.csv", "na_37_ortho_eval.csv",
              "na_42_ortho_eval.csv", "na_46_ortho_eval.csv",
              "na_47_ortho_eval.csv")
fileDir <- "C:/temp_working/bba/BBATest_gcps/"


fileList <- c(paste(fileDir, fileName[1],  sep=""), paste(fileDir, fileName[2],  sep=""),
              paste(fileDir, fileName[3],  sep=""), paste(fileDir, fileName[4],  sep=""),
              paste(fileDir, fileName[5],  sep=""), paste(fileDir, fileName[6],  sep=""),
              paste(fileDir, fileName[7],  sep=""), paste(fileDir, fileName[8],  sep=""),
              paste(fileDir, fileName[9],  sep=""), paste(fileDir, fileName[10], sep=""),
              paste(fileDir, fileName[11], sep="") )

##################
# Plot Parameters
##################

    xRange <- c(-8, 8)
    yRange <- c(-8, 8)
    xLabel <-  ("Easting offset (m)")
    yLabel <-  ("Northing offset (m)")
    Title  <-  ("Map Accuracy: Measured from Orthos")

    pltColor <- c("blue", "green4", "ivory3", "gray", "black")
    # color key-->[1]raw, [2]adj, [3]arrows, [4]grid, [5]x=0, y=0

    op <- par(mfrow = c(3, 4), # 1 x 1 pictures on one plot
          pty = "s")       # square plotting region, independent of device size

##################
# Data arrays
##################

    xAdjAll <-c()
    yAdjAll <-c()


##################
# initiate while and run through each file
##################
n <- 1
while ( n < 12 ) {
    myData1 <- read.table(fileList[n ], header=TRUE, sep = ",")	#read the inFile as a table.

    ##################
    # write Data to arrays
    ##################
    xAdj  <- c(myData1 $diff.x )
    yAdj  <- c(myData1 $diff.y )

    xAdjAll<- append(xAdjAll, xAdj)  # Combine the datasets
    yAdjAll<- append(yAdjAll, yAdj)  # Combine the datasets

    ##################
    # make Ellipses
    ##################
    #NOTE: Ellipses are not using rptConf for determining the confidence range
    adj_el <- dataEllipse (x= xAdj, y= yAdj, levels=c(0.9, 0.95), draw=FALSE)

    ##################
    # Plot
    ##################
    plot  (xAdj, yAdj, xlim=xRange, ylim = yRange,  col= pltColor[2], pch= 16, cex= 0.6,
        xlab= xLabel, ylab= yLabel, main=fileName[n])

       #######
       # elipse
    lines(adj_el $'0.9', col= pltColor[2])


       #######
       # grid
    abline(h = min(xRange):max(xRange), v = min(yRange):max(yRange), col = pltColor[4], lty = 3)
    abline(h = 0, v = 0, col = pltColor[5], lty = 1)

       ###############
       # Center points
    points (mean (xAdj), mean (yAdj), col= pltColor[2], lwd= 2, pch= 3, cex= 4)

      ########
      # Legend

      # get radial values
    rAdj <- sqrt(xAdj^2 + yAdj^2)
    rAdjConf <- signif(quantile(rAdj, rptConf),legSigFig)


      # make label
    legAdj <- paste("adj  - ", rAdjConf, "(m) at 90% conf", sep="")

    legCornerX <- min(xRange)
    legCornerY <- max(yRange)
    legend(legCornerX, legCornerY, c(legAdj),
	col = c(pltColor[2]), text.col = pltColor[5], lty = c(1, 1, 1, 1),
           lwd = c(1,1,1,1,1), pch = c(NA, NA, NA, NA),
	merge = TRUE, bg = "gray90")

n <- n+1
} #end while


#pass last - this is to plot ALL the observations onto one plot
    # using the xAdjAll, yAdjAll that have accumulatedin the passes above
    # not reading from files
    ##################
    # make Ellipses
    ##################
    #NOTE: Ellipses are not using rptConf for determining the confidence range

    adj_el <- dataEllipse (x= xAdjAll, y= yAdjAll, levels=c(0.9, 0.95), draw=FALSE)

    ##################
    # Plot
    ##################
    plot  (xAdjAll, yAdjAll, xlim=xRange, ylim = yRange,  col= pltColor[2], pch= 16, cex= 0.6,
        xlab= xLabel, ylab= yLabel, main="All")

    lines(adj_el $'0.9', col= pltColor[2])

       #######
       # grid
    abline(h = min(xRange):max(xRange), v = min(yRange):max(yRange), col = pltColor[4], lty = 3)
    abline(h = 0, v = 0, col = pltColor[5], lty = 1)

       ###############
       # Center points
    points (mean (xAdjAll), mean (yAdjAll), col= pltColor[1], lwd= 2, pch= 3, cex= 4)

      ########
      # Legend

      # get radial values
    rAdjAll <- sqrt(xAdjAll^2 + yAdjAll^2)
    rAdjConf <- signif(quantile(rAdjAll, rptConf),legSigFig)

      # make label
    legAdj <- paste("adj  - ", rAdjConf, "(m) at 90% conf", sep="")

    legCornerX <- min(xRange)
    legCornerY <- max(yRange)
    legend(legCornerX, legCornerY, c( legAdj),
	col = c(pltColor[2],pltColor[2]), text.col = pltColor[5], lty = c(1, 1, 1, 1), lwd = c                (1,1,1,1,1), pch = c(NA, NA, NA, NA),
	merge = TRUE, bg = "gray90")

##################
# Data Statistics
##################

mean(xAdjAll)
mean(yAdjAll)
max (xAdjAll)
min (xAdjAll)
max (yAdjAll)
min (yAdjAll)
sd  (xAdjAll)
sd  (yAdjAll)
sd  (xAdjAll) / sd  (yAdjAll)
rmseXY = (sd (xAdjAll)+sd (yAdjAll))/2  # Assuming non-biased normal distribution 
rmseXY
CE90 = rmseXY * 2.1460
CE90
quantile (rAdjAll, 0.90)
