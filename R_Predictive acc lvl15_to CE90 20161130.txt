# Provide a sampling of a Large Area Mosaic as inFile
# declare the stated accuracy of the sat and DEM
# ---Note: using the satCE90 across all ONAs.  this could be improved...---
# ---starting with 3.5m at nadir, and projecting the eiilpse as ONA increases---
#
# run the sampled ONA against the DEM LE90 to get terrain displacement
# and combine the terrain displacement with the satCE90 with RSS
# report on the resulting error array
#
# running one sample per point.  there are a large number of samples

inFile <- "C:/temp_working/bba/NO_ecopia/ecopia_lvl15.csv"
#inFile <- "C:/temp_working/dragonfly/ALL_ONA_30.csv" 


##############
# for plotting and reporting
#
bins = 100						# declare the number of Bins for the histogram  - for plotting
xRange <- c(0, 15)					# using xRange to set the x axis limits of xlim...
reportPercentages <- c(.50, .90, .95, .99999)		# used for the quantile report %'s

##############
# Satellite and DEM charecteristics
# use 5, and 16 for the general case 
# where there are no improvements
# Use improved values such as
# 2.5m CE90, and 3.6m LE90 (or whatever 
# is calculated when we get values from BBA
#

SatCE90 = 2.5
DEMLE90 = 3.3							
# SatCE90 = 5						# declare the satellite pointing accuracy
# DEMLE90 = 16						# declare the vertical accuracy of the DEM	

StDevSat = SatCE90 / 2.1460				# convert CE90 to Standard Deviation(xy) of sat - Assumes normal gausian distribution
StDevz   = DEMLE90 / 1.6449				# convert LE90 to Standard Deviation (z) of DEM - Assumes normal gausian distribution
							# using conversion values from Greenwalt and Schultz

##############
# read in the file
# assign ONA values to an array
#
myData <- read.table(inFile, header=TRUE, sep=",")	

ONA_Array <- c(myData $off_nadir)			# write the ONA data to an array

#############
# Model errors
#
sat_x  <- rnorm(length(ONA_Array),0,StDevSat)
sat_y  <- rnorm(length(ONA_Array),0,StDevSat)
sat_r  <- sqrt(sat_x^2 + sat_y^2)			# Sat_r as a radial distance of the x and y component
vert_e <- rnorm(length(ONA_Array),0,StDevz)
terrain_e <- vert_e*tan(ONA_Array*(pi/180))		# horizontal error is the vertical error from the DEM times the tangent of the ONA (values for tan need to be in radians, so we use ona*pi/180 to go from degrees to radians
terrain_r <- sqrt(terrain_e * terrain_e)		# provides the absolute value for Horizontal error.  This is a radial error, there can not be negatives
horiz_e_total <- sqrt((sat_r^2) + (terrain_r^2))	# rss

##############
# Histogram
# 
op <- par(mfrow = c(1, 2), # 1 x 1 pictures on one plot: resetting to always be 1x1
          pty = "s")       # square plotting region,
                           # independent of device size

hist (horiz_e_total, breaks=bins, density = 10, col="blue", angle = 45, xlim = xRange, main=inFile)
legend(6, length(ONA_Array)/40, c(paste("satCE90  = ",SatCE90,"m"),paste("DEMLE90 = ",DEMLE90,"m"), paste("Predective CE90 = ",signif(quantile (horiz_e_total, c(0.90)),2),"m")), 
	cex = 0.8,text.col = "green4", merge = TRUE, bg = "gray90")
# rug  (horiz_e_total)

hist (ONA_Array, breaks=30, density = 10, col="blue", angle = -45, xlim = c(0,30), main="Histogram of ONA" )




##############
# Report vlues
#
quantile (ONA_Array,           reportPercentages)
quantile (sat_r,               reportPercentages)
quantile (sqrt(vert_e*vert_e), reportPercentages)
quantile (terrain_e,           reportPercentages)
quantile (horiz_e_total,       reportPercentages)

SatCE90
DEMLE90



